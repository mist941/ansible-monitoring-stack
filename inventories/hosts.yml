---
# ============================================================================
# ANSIBLE MONITORING STACK - INVENTORY CONFIGURATION
# ============================================================================
# Purpose: Defines infrastructure layout for monitoring deployment
# Architecture: Central monitoring + distributed agents
# Requirements: Ubuntu 22.04+, Debian 11+
# ============================================================================

# ============================================================================
# MONITORING INFRASTRUCTURE SERVERS
# ============================================================================

# Core monitoring services - centralized deployment
monitoring_infrastructure:
  hosts:
    # Primary monitoring server (Prometheus + Grafana + Loki)
    monitoring-srv-01:
      ansible_host: 10.0.1.10
      ansible_user: ubuntu
      monitoring_role: primary

    # Secondary/backup monitoring server (optional)
    # monitoring-srv-02:
    #   ansible_host: 10.0.1.11
    #   ansible_user: ubuntu
    #   monitoring_role: secondary

# ============================================================================
# APPLICATION SERVERS TO MONITOR
# ============================================================================

# Web application servers
web_servers:
  hosts:
    web-srv-01:
      ansible_host: 10.0.2.10
      ansible_user: ubuntu
      server_type: web

    web-srv-02:
      ansible_host: 10.0.2.11
      ansible_user: ubuntu
      server_type: web

# Database servers
database_servers:
  hosts:
    db-srv-01:
      ansible_host: 10.0.3.10
      ansible_user: ubuntu
      server_type: database

    # db-srv-02:
    #   ansible_host: 10.0.3.11
    #   ansible_user: ubuntu
    #   server_type: database

# Application servers
app_servers:
  hosts:
    app-srv-01:
      ansible_host: 10.0.4.10
      ansible_user: ubuntu
      server_type: application

    # app-srv-02:
    #   ansible_host: 10.0.4.11
    #   ansible_user: ubuntu
    #   server_type: application

# ============================================================================
# LOGICAL GROUPING FOR ANSIBLE ROLES
# ============================================================================

# Servers that need base system setup
base_setup_servers:
  children:
    monitoring_infrastructure:
    web_servers:
    database_servers:
    app_servers:

# Servers that need Docker installed
docker_servers:
  children:
    monitoring_infrastructure:
    # Add other groups if they need Docker:
    # web_servers:
    # app_servers:

# ============================================================================
# MONITORING SERVICE DISTRIBUTION
# ============================================================================

# Prometheus server deployment
prometheus_servers:
  hosts:
    monitoring-srv-01:

# Grafana server deployment
grafana_servers:
  hosts:
    monitoring-srv-01:

# Loki log aggregation server
loki_servers:
  hosts:
    monitoring-srv-01:

# AlertManager (optional)
alertmanager_servers:
  hosts:
    monitoring-srv-01:

# ============================================================================
# MONITORING AGENTS DEPLOYMENT
# ============================================================================

# Node Exporter - system metrics (deployed everywhere)
node_exporter_servers:
  children:
    monitoring_infrastructure:
    web_servers:
    database_servers:
    app_servers:

# Promtail - log shipping (deployed everywhere)
promtail_servers:
  children:
    monitoring_infrastructure:
    web_servers:
    database_servers:
    app_servers:

# ============================================================================
# ENVIRONMENT-BASED GROUPING
# ============================================================================

# All monitoring servers (core services)
monitoring_servers:
  children:
    monitoring_infrastructure:

# All client servers (being monitored)
monitoring_clients:
  children:
    web_servers:
    database_servers:
    app_servers:

# All servers in infrastructure
all_servers:
  children:
    monitoring_servers:
    monitoring_clients:
# ============================================================================
# EXAMPLES FOR MULTI-ENVIRONMENT SETUP
# ============================================================================

# Production environment
# production:
#   children:
#     monitoring_infrastructure:
#     web_servers:
#     database_servers:

# Staging environment
# staging:
#   hosts:
#     staging-monitoring:
#       ansible_host: 10.0.10.10
#     staging-web:
#       ansible_host: 10.0.10.20

# Development environment
# development:
#   hosts:
#     dev-all-in-one:
#       ansible_host: 10.0.20.10
#       # Single server for all monitoring services in dev
